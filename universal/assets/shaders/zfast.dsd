<vertex>

attribute vec2 a_vertex_coordinate;
attribute vec2 a_texture_coordinate;
uniform vec4 u_texture_size;

varying vec2 v_texture_coordinate;

void main()
{
	v_texture_coordinate = a_texture_coordinate;
	gl_Position = vec4(a_vertex_coordinate.xy, 0.0, 1.0);
}

</vertex>

<fragment>
#ifndef BRIGHTEN_SCANLINES
#define BRIGHTEN_SCANLINES 16.0
#endif
#ifndef BRIGHTEN_LCD
#define BRIGHTEN_LCD 4.0
#endif

#define PI 3.141592654

uniform sampler2D u_texture;
uniform vec4 u_texture_size;

varying vec2 v_texture_coordinate;

const float INV_BRIGHTEN_SCANLINES_INC = 0.945 / BRIGHTEN_SCANLINES;
const float INV_BRIGHTEN_LCD_INC = 0.945 / BRIGHTEN_LCD;

void main()
{
    vec2 angle = PI * (v_texture_coordinate.xy * u_texture_size.zw * u_texture_size.y);
	float yfactor = (BRIGHTEN_SCANLINES + sin(angle.y)) * INV_BRIGHTEN_SCANLINES_INC;
	float xfactor = (BRIGHTEN_LCD + sin(angle.x)) * INV_BRIGHTEN_LCD_INC;

	vec3 colour = texture2D(u_texture, v_texture_coordinate.xy).rgb;

	colour.rgb = yfactor * xfactor * colour.rgb;	
	gl_FragColor = vec4(colour.rgb, 1.0);
}

</fragment>
