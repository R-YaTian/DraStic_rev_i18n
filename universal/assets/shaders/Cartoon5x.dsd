
<vertex>
attribute vec2 a_vertex_coordinate;
attribute vec2 a_texture_coordinate;
uniform vec4 u_texture_size;

varying vec4 v_texture_coordinate;
varying vec4 v_texture_coordinate_1;
varying vec4 v_texture_coordinate_2;
varying vec4 v_texture_coordinate_3;
varying vec4 v_texture_coordinate_4;
varying vec4 v_texture_coordinate_5;
varying vec4 v_texture_coordinate_6;

float scaleoffset = 0.5; //邊緣檢測偏移 Drastic 0.3 to 0.7

void main()
{
  float x = u_texture_size.x*scaleoffset;
  float y = u_texture_size.y*scaleoffset;
  vec2 dg1 = vec2( x,y);
  vec2 dg2 = vec2(-x,y);
  vec2 dx  = vec2(x,0.0);
  vec2 dy  = vec2(0.0,y);
  gl_Position = vec4(a_vertex_coordinate.xy, 0.0, 1.0);
  v_texture_coordinate = a_texture_coordinate.xyxy;
  v_texture_coordinate_1.xy = v_texture_coordinate.xy - dy;
  v_texture_coordinate_2.xy = v_texture_coordinate.xy + dy;
  v_texture_coordinate_3.xy = v_texture_coordinate.xy - dx;
  v_texture_coordinate_4.xy = v_texture_coordinate.xy + dx;
  v_texture_coordinate_5.xy = v_texture_coordinate.xy - dg1;
  v_texture_coordinate_6.xy = v_texture_coordinate.xy + dg1;
  v_texture_coordinate_1.zw = v_texture_coordinate.xy - dg2;
  v_texture_coordinate_2.zw = v_texture_coordinate.xy + dg2;

}

</vertex>
<fragment>

const float bb = 0.5; // 黑色邊線效果強度 0.0 to 1.0

uniform sampler2D u_texture;

varying vec4 v_texture_coordinate;
varying vec4 v_texture_coordinate_1;
varying vec4 v_texture_coordinate_2;
varying vec4 v_texture_coordinate_3;
varying vec4 v_texture_coordinate_4;
varying vec4 v_texture_coordinate_5;
varying vec4 v_texture_coordinate_6;

void main()
{
  vec3 c00 = texture2D(u_texture, v_texture_coordinate_5.xy).xyz; 
  vec3 c10 = texture2D(u_texture, v_texture_coordinate_1.xy).xyz; 
  vec3 c20 = texture2D(u_texture, v_texture_coordinate_2.zw).xyz; 
  vec3 c01 = texture2D(u_texture, v_texture_coordinate_3.xy).xyz; 
  vec3 c11 = texture2D(u_texture, v_texture_coordinate.xy).xyz; 
  vec3 c21 = texture2D(u_texture, v_texture_coordinate_4.xy).xyz; 
  vec3 c02 = texture2D(u_texture, v_texture_coordinate_1.zw).xyz; 
  vec3 c12 = texture2D(u_texture, v_texture_coordinate_2.xy).xyz; 
  vec3 c22 = texture2D(u_texture, v_texture_coordinate_6.xy).xyz; 
  vec3 dt = vec3(1.0,1.0,1.0); 

  float d1=dot(abs(c00-c22),dt);
  float d2=dot(abs(c20-c02),dt);
  float hl=dot(abs(c01-c21),dt);
  float vl=dot(abs(c10-c12),dt);
  float d = bb*(d1+d2+hl+vl)/(dot(c11,dt)+0.15);

  float lc = 4.0*length(c11);
  float f = fract(lc); f*=f;
  lc = 0.25*(floor(lc) + f*f)+0.05;
  c11 = 4.0*normalize(c11); 
  vec3 frct = fract(c11); frct*=frct;
  c11 = floor(c11)+ 0.05*dt + frct*frct;
  gl_FragColor.rgb = 0.25*lc*(1.1-d*sqrt(d))*c11;
  gl_FragColor.a = 1.0;
}

</fragment>
